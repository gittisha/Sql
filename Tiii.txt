mysql -h 127.0.0.1 -P 3306 -u root -p
ASSIGNMENT-1
TABLE CREATION:
	CREATE TABLE sailor(sid int(5), sname varchar(20), rating int(2), age float(5,2), primary key(sid));
	CREATE TABLE boat(bid int(5), bname varchar(20), color char(10), primary key(bid));
	CREATE TABLE reserves(sid int(5) REFERENCES sailor (sid) ON DELETE CASCADE, bid int(5) REFERENCES boat (bid) ON DELETE CASCADE,day date, primary key(sid,bid,day));

INSERTING TABLE:
	INSERT INTO sailor VALUES (01,'abc',5,35.2);
	INSERT INTO sailor VALUES (02,'def',6,38.5);
	INSERT INTO sailor VALUES (03,'ghi',7,39.5);
	INSERT INTO sailor VALUES (09,'Tisha',10,20.3);
	INSERT INTO sailor VALUES (05,'Supriya',10,18.9);
	INSERT INTO sailor VALUES (06,'Joyeeta',10,40);
	INSERT INTO sailor VALUES (07,'Dipendu',2,35);
	INSERT INTO sailor VALUES (08,'Disha',3,17.6);
	INSERT INTO sailor VALUES (10,'Pritam',1,30.1);
	INSERT INTO sailor VALUES (11,'Debanjan',5,38);
	INSERT INTO sailor VALUES (12,'Bhaibab',8,16.4);
	INSERT INTO sailor VALUES (13,'Bob',6,45);
+-----+----------+--------+-------+
| sid | sname    | rating | age   |
+-----+----------+--------+-------+
|   1 | abc      |      5 | 35.20 |
|   2 | def      |      6 | 38.50 |
|   3 | ghi      |      7 | 39.50 |
|   5 | Supriya  |     10 | 18.90 |
|   6 | Joyeeta  |     10 | 40.00 |
|   7 | Dipendu  |      2 | 35.00 |
|   8 | Disha    |      3 | 17.60 |
|   9 | Tisha    |     10 | 20.30 |
|  10 | Pritam   |      1 | 30.10 |
|  11 | Debanjan |      5 | 38.00 |
|  12 | Bhaibab  |      8 | 16.40 |
|  13 | Bob      |      6 | 45.00 |
+-----+----------+--------+-------+

	INSERT INTO boat VALUES (100,'boatA','green');
	INSERT INTO boat VALUES (101,'boatB','yellow');
	INSERT INTO boat VALUES (102,'boatC','red');
	INSERT INTO boat VALUES (103,'boatD','matteblack');
+-----+-------+------------+
| bid | bname | color      |
+-----+-------+------------+
| 100 | boatA | green      |
| 101 | boatB | yellow     |
| 102 | boatC | red        |
| 103 | boatD | matteblack |
+-----+-------+------------+

	INSERT INTO reserves VALUES (01,102,'2012-02-12');
	INSERT INTO reserves VALUES (02,100,'2012-09-27');
	INSERT INTO reserves VALUES (03,103,'2012-03-09');
	INSERT INTO reserves VALUES (01,100,'2017-03-19');
	INSERT INTO reserves VALUES (02,100,'2012-05-29');
	INSERT INTO reserves VALUES (03,103,'2012-10-14');
	INSERT INTO reserves VALUES (03,101,'2012-03-09');
	INSERT INTO reserves VALUES (05,101,'2022-05-30');
	INSERT INTO reserves VALUES (05,102,'2017-03-19');
	INSERT INTO reserves VALUES (06,100,'2006-12-29');
	INSERT INTO reserves VALUES (06,103,'2018-02-05');
	INSERT INTO reserves VALUES (07,101,'2017-03-19');
	INSERT INTO reserves VALUES (07,102,'2020-05-22');
	INSERT INTO reserves VALUES (08,100,'2022-05-30');
	INSERT INTO reserves VALUES (08,103,'2023-05-30');
	INSERT INTO reserves VALUES (09,102,'2022-03-09');
	INSERT INTO reserves VALUES (09,100,'2020-05-22');
	INSERT INTO reserves VALUES (09,101,'2022-11-12');
	INSERT INTO reserves VALUES (09,103,'2021-02-26');
	INSERT INTO reserves VALUES (10,101,'2023-07-20');
	INSERT INTO reserves VALUES (10,102,'2023-11-30');
	INSERT INTO reserves VALUES (11,100,'2023-02-01');
	INSERT INTO reserves VALUES (12,101,'2023-04-11');
	INSERT INTO reserves VALUES (09,102,'2022-11-12');
	INSERT INTO reserves VALUES (02,101,'2012-09-27');

+-----+-----+------------+
| sid | bid | day        |
+-----+-----+------------+
|   1 | 100 | 2017-03-19 |
|   1 | 102 | 2012-02-12 |
|   2 | 100 | 2012-05-29 |
|   2 | 100 | 2012-09-27 |
|   2 | 101 | 2012-09-27 |
|   3 | 101 | 2012-10-14 |
|   3 | 103 | 2012-03-09 |
|   5 | 101 | 2022-05-30 |
|   5 | 102 | 2017-03-19 |
|   6 | 100 | 2006-12-29 |
|   6 | 103 | 2018-02-05 |
|   7 | 101 | 2017-03-19 |
|   7 | 102 | 2020-05-22 |
|   8 | 100 | 2022-05-30 |
|   8 | 103 | 2023-05-30 |
|   9 | 100 | 2020-05-22 |
|   9 | 101 | 2022-11-12 |
|   9 | 102 | 2022-03-09 |
|   9 | 102 | 2022-11-12 |
|   9 | 103 | 2021-02-26 |
|  10 | 101 | 2023-07-20 |
|  10 | 102 | 2023-11-30 |
|  11 | 100 | 2023-02-01 |
|  12 | 101 | 2023-04-11 |
+-----+-----+------------+
QUERIES:
	Q1)Find the ages AND name of all sailors
	>	SELECT sname,age FROM sailor; 
+----------+-------+
| sname    | age   |
+----------+-------+
| abc      | 35.20 |
| def      | 38.50 |
| ghi      | 39.50 |
| Supriya  | 18.90 |
| Joyeeta  | 40.00 |
| Dipendu  | 35.00 |
| Disha    | 17.60 |
| Tisha    | 20.30 |
| Pritam   | 30.10 |
| Debanjan | 38.00 |
| Bhaibab  | 16.40 |
+----------+-------+

	Q2) Find all sailors with rating above 7.
	>	SELECT sname,rating FROM sailor WHERE rating>7;
+---------+--------+
| sname   | rating |
+---------+--------+
| Supriya |     10 |
| Joyeeta |     10 |
| Tisha   |     10 |
| Bhaibab |      8 |
+---------+--------+

	Q3) Find the name of sailors who have reserved boat no. 103
	>	SELECT sname FROM sailor s ,reserves r WHERE s.sid= r.sid AND r.bid=103;
+---------+
| sname   |
+---------+
| ghi     |
| Joyeeta |
| Disha   |
| Tisha   |
+---------+

	Q4) Find the name of sailors who have reserved the red boat
	>	SELECT sname FROM sailor s ,reserves r, boat b WHERE b.color='red' AND s.sid=r.sid AND b.bid= r.bid;
+---------+
| sname   |
+---------+
| abc     |
| Supriya |
| Dipendu |
| Tisha   |
| Pritam  |
+---------+

	Q5) Find the name of sailors who have atleast 1 boat
	>	SELECT distinct sname, bid FROM sailor s, reserves r WHERE s.sid=r.sid;
+----------+-----+
| sname    | bid |
+----------+-----+
| abc      | 100 |
| abc      | 102 |
| def      | 100 |
| ghi      | 101 |
| ghi      | 103 |
| Supriya  | 101 |
| Supriya  | 102 |
| Joyeeta  | 100 |
| Joyeeta  | 103 |
| Dipendu  | 101 |
| Dipendu  | 102 |
| Disha    | 100 |
| Disha    | 103 |
| Tisha    | 100 |
| Tisha    | 101 |
| Tisha    | 102 |
| Tisha    | 103 |
| Pritam   | 101 |
| Pritam   | 102 |
| Debanjan | 100 |
| Bhaibab  | 101 |
+----------+-----+

	Q6) Find the colours of boat reserved by 'Tisha'
	>	SELECT distinct b.color FROM sailor s ,reserves r, boat b WHERE s.sname='Tisha' AND r.bid=b.bid AND s.sid= r.sid;
+------------+
| color      |
+------------+
| green      |
| yellow     |
| red        |
| matteblack |
+------------+

	Q7) Compute increments for the rating of persons who have sailed two different boats on the same day
	>	SELECT s.sname, s.rating+1 as rating FROM sailor s ,reserves r1, reserves r2,boat b WHERE s.s id=r1.sid AND s.sid= r2.sid AND r1.day=r2.day AND r1.bid<>r2.bid;

	Q8) Find the name of sailors who have reserved a Red boat or a Green Boat	
		(SELECT s.sname FROM sailor s ,reserves r, boat b WHERE s.sid= r.sid AND b.bid= r.bid AND b.color= 'red') UNION (SELECT s.sname FROM sailor s ,reserves r, boat b WHERE s.sid= r.sid AND b.bid= r.bid AND b.color= 'green');
+----------+
| sname    |
+----------+
| abc      |
| Supriya  |
| Dipendu  |
| Tisha    |
| Pritam   |
| def      |
| Joyeeta  |
| Disha    |
| Debanjan |
+----------+

	Q9) Find the name of sailors who have reserved both Red boat AND Green Boat
	>	SELECT s.sname FROM sailor s ,reserves r1, boat b1, reserves r2, boat b2 WHERE s.sid= r1.sid AND b1.bid= r1.bid AND s.sid= r2.sid AND b2.bid= r2.bid AND b1.color= 'red' AND b2.color= 'green';
+-------+
| sname |
+-------+
| abc   |
| Tisha |
+-------+
	Q10)  Find the sid's of all sailors who have reserved Red boats but not Green Boats
	>	SELECT DISTINCT s.sid FROM sailor s JOIN reserves r ON s.sid = r.sid JOIN boat b ON r.bid = b.bid WHERE b.color = 'Red' AND not EXISTS (SELECT 1 FROM reserves r2 JOIN boat b2 ON r2.bid = b2.bid WHERE r2.sid = s.sid AND b2.color = 'Green');
	OR
		SELECT DISTINCT sid FROM Reserves WHERE bid IN (SELECT bid FROM boat WHERE color = 'red') AND sid NOT IN (SELECT sid FROM reserves WHERE bid IN (SELECT bid FROM boat WHERE color = 'green'));

+-----+
| sid |
+-----+
|   5 |
|   7 |
|  10 |
+-----+
The SELECT 1 is used as a placeholder value. It doesn't matter what value you select here; the purpose is simply to determine whether any rows match the conditions specified in the WHERE clause.
The JOIN and WHERE conditions inside the subquery are used to identify rows where a sailor (r2.sid = s.sid) has made a reservation (JOIN reserves) for a green boat (b2.color = 'Green').

	Q11) Find the name of sailors who have not reserved a Red boat
	>	SELECT sname FROM sailor WHERE sid NOT IN (SELECT sid FROM reserves WHERE bid IN (SELECT bid FROM boat WHERE color='red'));
+----------+
| sname    |
+----------+
| def      |
| ghi      |
| Joyeeta  |
| Disha    |
| Debanjan |
| Bhaibab  |
| Bob      |
+----------+

	Q12) Find the sailors whose rating is better than "def"
	>	SELECT s2.sid FROM sailor s2 WHERE s2.rating> ANY (SELECT s1.rating FROM sailor s1 WHERE s1.sname= 'def');
+-----+
| sid |
+-----+
|   3 |
|   5 |
|   6 |
|   9 |
|  12 |
+-----+
	Q13) Find the sailors with highest rating.
	>	SELECT s1.sname FROM sailor s1 WHERE s1.rating >= ALL(SELECT s2.rating FROM Sailor s2);
+---------+
| sname   |
+---------+
| Supriya |
| Joyeeta |
| Tisha   |
+---------+
	Q14) Find the sailors whose name Begins AND end swith 'B' AND has at least 3 characters
	>	SELECT sname FROM sailor WHERE sname LIKE 'B_%B';
+---------+
| sname   |
+---------+
| Bhaibab |
| Bob     |
+---------+	
	Q15) Find the names of sailors who had reserved all boats.
	>	SELECT s.sname FROM sailor s WHERE not EXISTS (SELECT b.bid FROM boat b WHERE not EXISTS(SELECT r.bid FROM reserves r WHERE r.sid= s.sid AND r.bid=b.bid));
+-------+
| sname |
+-------+
| Tisha |
+-------+
	Q16) Find the name AND age of the oldest sailor.
	>	SELECT sname,age FROM sailor WHERE age= (SELECT MAX(age) FROM sailor); 
+-------+-------+
| sname | age   |
+-------+-------+
| Bob   | 45.00 |
+-------+-------+
	Q17) Find the names of sailor who are older than the oldest sailor with rating 10.
	>	SELECT s1.sname FROM sailor s1 WHERE s1.age> (SELECT MAX(s2.age) FROM sailor s2 WHERE s2.rating=10);
+-------+
| sname |
+-------+
| Bob   |
+-------+
	Q18) Find the age of the youngest sailor who is eligble to vote(i.e at least 18 years old) for each rating level with atleast two sailors.
	>	SELECT s.rating, MIN(age) as minage FROM sailor s WHERE s.age>=18 GROUP BY s.rating HAVING COUNT(*)>1;
+--------+--------+
| rating | minage |
+--------+--------+
|      5 |  35.20 |
|      6 |  38.50 |
|     10 |  18.90 |
+--------+--------+
	Q19) Find the average age of sailors who are eligble to vote(i.e at least 18 years old) for each rating level with atleast two sailors.
	>	 SELECT s.rating, AVG(s.age) as avg_age FROM sailor s WHERE s.age>=18 GROUP BY s.rating HAVING COUNT(*) >=2;
+--------+-----------+
| rating | avg_age   |
+--------+-----------+
|      5 | 36.600000 |
|      6 | 41.750000 |
|     10 | 26.400000 |
+--------+-----------+
	Q20) Find those ratings for which the average age of sailors is the minimum over all ratings. 	
	>SELECT rating, AVG(age) as avg_age FROM sailor GROUP BY rating HAVING COUNT(*)>=2 ORDER BY avg_age ASC LIMIT 1;
+--------+-----------+
| rating | avg_age   |
+--------+-----------+
|     10 | 26.400000 |
+--------+-----------+